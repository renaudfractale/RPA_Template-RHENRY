<Activity mc:Ignorable="sap sap2010" x:Class="GetLastSession" this:GetLastSession.in_NoSession="5" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FolderOrchrestrator" Type="InArgument(x:String)" />
    <x:Property Name="in_QueueName" Type="InArgument(x:String)" />
    <x:Property Name="in_NoSession" Type="InArgument(x:String)" />
    <x:Property Name="in_FolderRecap" Type="InArgument(x:String)" />
    <x:Property Name="out_PathExcel" Type="OutArgument(x:String)" />
    <x:Property Name="out_DT" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_Rouges" Type="OutArgument(x:String)" />
    <x:Property Name="out_Verts" Type="OutArgument(x:String)" />
    <x:Property Name="out_Oranges" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1394,11924</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetLastSession_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="38">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Security</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="33">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Sequence MAIN" sap:VirtualizedContainerService.HintSize="1404,11859" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="njl:JObject" Name="JSON_ITEMS" />
      <Variable x:TypeArguments="sd:DataTable" Name="DT_RecapRAW" />
      <Variable x:TypeArguments="x:String" Name="TenantName" />
      <Variable x:TypeArguments="x:String" Name="refresh_token" />
      <Variable x:TypeArguments="x:String" Name="client_id" />
      <Variable x:TypeArguments="x:String" Name="AccountLogicalName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1362,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Start GetInfoOfSession&quot;]" />
    <Sequence DisplayName="Sequence Get Assets" sap:VirtualizedContainerService.HintSize="1362,1296" sap2010:WorkflowViewState.IdRef="Sequence_26">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Sequence AccountLogicalName" sap:VirtualizedContainerService.HintSize="326,271" sap2010:WorkflowViewState.IdRef="Sequence_22">
        <Sequence.Variables>
          <Variable x:TypeArguments="ss:SecureString" Name="PwdSecure" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="Orchestrator_AccountLogicalName" DisplayName="Get Credential" FolderPath="CONFIG" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[PwdSecure]" />
        <Assign sap:VirtualizedContainerService.HintSize="284,60" sap2010:WorkflowViewState.IdRef="Assign_42">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[AccountLogicalName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, PwdSecure).Password]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <Sequence DisplayName="Sequence client_id" sap:VirtualizedContainerService.HintSize="326,271" sap2010:WorkflowViewState.IdRef="Sequence_23">
        <Sequence.Variables>
          <Variable x:TypeArguments="ss:SecureString" Name="PwdSecure" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="Orchestrator_client_id" DisplayName="Get Credential" FolderPath="CONFIG" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[PwdSecure]" />
        <Assign sap:VirtualizedContainerService.HintSize="284,60" sap2010:WorkflowViewState.IdRef="Assign_43">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[client_id]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, PwdSecure).Password]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <Sequence DisplayName="Sequence refresh_token" sap:VirtualizedContainerService.HintSize="326,271" sap2010:WorkflowViewState.IdRef="Sequence_24">
        <Sequence.Variables>
          <Variable x:TypeArguments="ss:SecureString" Name="PwdSecure" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="Orchestrator_refresh_token" DisplayName="Get Credential" FolderPath="CONFIG" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetRobotCredential_3" Password="[PwdSecure]" />
        <Assign sap:VirtualizedContainerService.HintSize="284,60" sap2010:WorkflowViewState.IdRef="Assign_44">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[refresh_token]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, PwdSecure).Password]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <Sequence DisplayName="Sequence TenantName" sap:VirtualizedContainerService.HintSize="326,271" sap2010:WorkflowViewState.IdRef="Sequence_25">
        <Sequence.Variables>
          <Variable x:TypeArguments="ss:SecureString" Name="PwdSecure" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="Orchestrator_TenantName" DisplayName="Get Credential" FolderPath="CONFIG" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetRobotCredential_4" Password="[PwdSecure]" />
        <Assign sap:VirtualizedContainerService.HintSize="284,60" sap2010:WorkflowViewState.IdRef="Assign_45">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[TenantName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, PwdSecure).Password]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </Sequence>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GetInfoOfQItems - Uipath workflow" sap:VirtualizedContainerService.HintSize="1362,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Librairy\Orchestrateur\NoDeSession\Libs\GetInfoOfQItems.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_ClientId">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="client_id" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_RefreshToken">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="refresh_token" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_TenantName">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="TenantName" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_AccountLogicalName">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="AccountLogicalName" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_FolderOrchrestrator">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_FolderOrchrestrator" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_QueueName">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_QueueName" />
        </InArgument>
        <OutArgument x:TypeArguments="njl:JObject" x:Key="out_JSON_ITEMS">
          <mva:VisualBasicReference x:TypeArguments="njl:JObject" ExpressionText="JSON_ITEMS" />
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:BuildDataTable DataTable="[DT_RecapRAW]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="1362,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Input&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Output&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Analyse&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Reference&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Exception&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <If Condition="[JSON_ITEMS isnot Nothing]" DisplayName="If JSON_ITEMS isnot Nothing" sap:VirtualizedContainerService.HintSize="1362,10049" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Sequence JSON_ITEMS isnot Nothing" sap:VirtualizedContainerService.HintSize="1326,9872" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Int32" Name="index" />
            <Variable x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:Object))" Name="ColumsIndex" />
            <Variable x:TypeArguments="sd:DataTable" Name="DT_Recap" />
            <Variable x:TypeArguments="x:Int32" Name="indexMaster" />
            <Variable x:TypeArguments="x:Int32" Name="NbVert" />
            <Variable x:TypeArguments="x:Int32" Name="NbRouge" />
            <Variable x:TypeArguments="x:Int32" Name="NbOrange" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="1284,60" sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">0</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InterruptibleDoWhile DisplayName="Do While LOOP DT_RecapRAW" sap:VirtualizedContainerService.HintSize="1284,2486" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
            <ui:InterruptibleDoWhile.Body>
              <Sequence DisplayName="Sequence LOOP" sap:VirtualizedContainerService.HintSize="526,2321" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Sequence.Variables>
                  <Variable x:TypeArguments="njl:JToken" Name="Objet" />
                  <Variable x:TypeArguments="njl:JToken" Name="NoSessionObj" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="njl:JToken">[Objet]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="njl:JToken">[JSON_ITEMS.SelectToken("value["+index.ToString+"]")]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[Objet is Nothing]" sap:VirtualizedContainerService.HintSize="484,236" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <ui:Break sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                  </If.Then>
                </If>
                <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="njl:JToken">[NoSessionObj]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="njl:JToken">[JSON_ITEMS.SelectToken("value["+index.ToString+"].SpecificContent.NoSession")]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[in_NoSession.Length =0 or (NoSessionObj IsNot Nothing AndAlso NoSessionObj.ToString = in_NoSession)]" sap:VirtualizedContainerService.HintSize="484,1653" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Then>
                    <Sequence DisplayName="Sequence Add ROW" sap:VirtualizedContainerService.HintSize="376,1477" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="njl:JToken" Name="SpecificContent_Out" />
                        <Variable x:TypeArguments="njl:JToken" Name="SpecificContent_In" />
                        <Variable x:TypeArguments="x:String" Name="JsonIn_txt" />
                        <Variable x:TypeArguments="njl:JToken" Name="SpecificContent_Analyse" />
                        <Variable x:TypeArguments="x:String" Name="JsonOut_txt" />
                        <Variable x:TypeArguments="x:String" Name="JsonAnalyse_txt" />
                        <Variable x:TypeArguments="njl:JToken" Name="SpecificContent_Ref" />
                        <Variable x:TypeArguments="x:String" Name="JsonRef_txt" />
                        <Variable x:TypeArguments="njl:JToken" Name="SpecificContent_Status" />
                        <Variable x:TypeArguments="x:String" Name="JsonStatus_txt" />
                        <Variable x:TypeArguments="njl:JToken" Name="SpecificContent_Exception" />
                        <Variable x:TypeArguments="x:String" Name="JsonException_txt" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                        <Assign.To>
                          <OutArgument x:TypeArguments="njl:JToken">[SpecificContent_In]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="njl:JToken">[JSON_ITEMS.SelectToken("value["+index.ToString+"].SpecificContent")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[JsonIn_txt]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[SpecificContent_In.ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                        <Assign.To>
                          <OutArgument x:TypeArguments="njl:JToken">[SpecificContent_Out]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="njl:JToken">[JSON_ITEMS.SelectToken("value["+index.ToString+"].Output")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[JsonOut_txt]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[SpecificContent_Out.ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                        <Assign.To>
                          <OutArgument x:TypeArguments="njl:JToken">[SpecificContent_Analyse]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="njl:JToken">[JSON_ITEMS.SelectToken("value["+index.ToString+"].Analytics")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[JsonAnalyse_txt]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[SpecificContent_Analyse.ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                        <Assign.To>
                          <OutArgument x:TypeArguments="njl:JToken">[SpecificContent_Ref]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="njl:JToken">[JSON_ITEMS.SelectToken("value["+index.ToString+"].Reference")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[JsonRef_txt]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[SpecificContent_Ref.ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                        <Assign.To>
                          <OutArgument x:TypeArguments="njl:JToken">[SpecificContent_Status]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="njl:JToken">[JSON_ITEMS.SelectToken("value["+index.ToString+"].Status")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[JsonStatus_txt]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[SpecificContent_Status.ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                        <Assign.To>
                          <OutArgument x:TypeArguments="njl:JToken">[SpecificContent_Exception]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="njl:JToken">[JSON_ITEMS.SelectToken("value["+index.ToString+"].ProcessingException")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[JsonException_txt]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[SpecificContent_Exception.ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{JsonIn_txt,JsonOut_txt,JsonAnalyse_txt,JsonRef_txt,JsonStatus_txt,JsonException_txt}]" DataTable="[DT_RecapRAW]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                    </Sequence>
                  </If.Then>
                </If>
                <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[index+1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </ui:InterruptibleDoWhile.Body>
            <ui:InterruptibleDoWhile.Condition>
              <Literal x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="Literal`1_1" Value="True" />
            </ui:InterruptibleDoWhile.Condition>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InterruptibleDoWhile>
          <Assign DisplayName="Assing out_Config (initialization)" sap:VirtualizedContainerService.HintSize="1284,60" sap2010:WorkflowViewState.IdRef="Assign_26">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:Object))">[ColumsIndex]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:Object))">[New Dictionary(Of String, Dictionary(Of String,Object))]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[DT_RecapRAW]" DisplayName="For Each Row - Create Index Colums" sap:VirtualizedContainerService.HintSize="1284,1458" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="604,1338" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,1246" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[{&quot;Input&quot;,&quot;Output&quot;,&quot;Analyse&quot;,&quot;Exception&quot;}]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1122" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="jsonCell" />
                            <Variable x:TypeArguments="njl:JObject" Name="JsonObj" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[jsonCell]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[row(item).ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <If Condition="[jsonCell.Length=0]" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_5">
                            <If.Then>
                              <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
                            </If.Then>
                          </If>
                          <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[JsonObj]" JsonString="[jsonCell]" />
                          <If Condition="[not ColumsIndex.ContainsKey(item)]" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_4">
                            <If.Then>
                              <Assign DisplayName="Add Config key/value pair" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[ColumsIndex(item)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(Of String,Object)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                          <ui:ForEach x:TypeArguments="njl:JProperty" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="484,276" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[JsonObj.Properties]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="njl:JProperty">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="njl:JProperty" Name="properties" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Add Config key/value pair" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[ColumsIndex(item)(properties.Name)]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Object">["1"]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <ui:BuildDataTable DataTable="[DT_Recap]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="1284,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Etat&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Reference&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Create Colums" sap:VirtualizedContainerService.HintSize="1284,617" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[ColumsIndex.Keys]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="titre" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,493" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,401" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[ColumsIndex(titre).Keys]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="subtitre" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,277" sap2010:WorkflowViewState.IdRef="Sequence_9">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" Unique="{x:Null}" ColumnName="[titre+&quot;.&quot;+subtitre]" DataTable="[DT_Recap]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" MaxLength="-1" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[indexMaster]" DataTable="[DT_RecapRAW]" DisplayName=" (Working in progresse)" sap:VirtualizedContainerService.HintSize="1284,1976.66666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
            <ui:ForEachRow.Body>
              <ActivityAction x:TypeArguments="sd:DataRow">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1250,1854" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Int32" Name="indexSub" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{}]" DataTable="[DT_Recap]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="1208,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                  <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="[indexSub]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1208,1700" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[DT_Recap.Columns]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="sd:DataColumn">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="colum" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1171.33333333333,1562.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_14">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="ColumnName" />
                            <Variable x:TypeArguments="x:String" Name="ColumnNameRoot" />
                            <Variable x:TypeArguments="x:String" Name="ColumnNameSub" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="1129.33333333333,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_33">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[ColumnName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[colum.ColumnName]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1129.33333333333,128" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[ColumnNameRoot]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">[ColumnName.split("."c).ToList.Item(0)]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[ColumnNameSub]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                          <If Condition="[ColumnName.split(&quot;.&quot;c).ToList.Count &gt;1]" sap:VirtualizedContainerService.HintSize="1129.33333333333,243.333333333333" sap2010:WorkflowViewState.IdRef="If_8">
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_34">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[ColumnNameSub]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[ColumnName.split("."c).ToList.Item(1)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                          <If Condition="[ColumnNameSub.Length=0]" sap:VirtualizedContainerService.HintSize="1129.33333333333,918" sap2010:WorkflowViewState.IdRef="If_10">
                            <If.Then>
                              <If Condition="[indexSub&gt;0]" sap:VirtualizedContainerService.HintSize="484,243.333333333333" sap2010:WorkflowViewState.IdRef="If_9">
                                <If.Then>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_35">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[DT_Recap.Rows(indexMaster)(ColumnNameRoot)]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Object">[row(ColumnName).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                              </If>
                            </If.Then>
                            <If.Else>
                              <If Condition="[row(ColumnNameRoot).ToString.Length&gt;0]" sap:VirtualizedContainerService.HintSize="599.333333333333,756" sap2010:WorkflowViewState.IdRef="If_11">
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="562.666666666667,574" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="njl:JObject" Name="jsonTemp" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="520.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3" JsonObject="[jsonTemp]" JsonString="[row(ColumnNameRoot).ToString]" />
                                    <ui:ForEach x:TypeArguments="njl:JProperty" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="520.666666666667,380.666666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[jsonTemp.Properties]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="njl:JProperty">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="njl:JProperty" Name="itemJson" />
                                          </ActivityAction.Argument>
                                          <If Condition="[itemJson.Name = ColumnNameSub]" sap:VirtualizedContainerService.HintSize="484,243.333333333333" sap2010:WorkflowViewState.IdRef="If_12">
                                            <If.Then>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_36">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[DT_Recap.Rows(indexMaster)(ColumnName)]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Object">[itemJson.Value.ToString]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                          </If>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                    </ui:ForEach>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </ActivityAction>
            </ui:ForEachRow.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachRow>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1284,158.666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Int32">[NbVert]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Int32">[NbRouge]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Int32">[NbOrange]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <If Condition="[ColumsIndex.ContainsKey(&quot;Analyse&quot;) AndAlso ColumsIndex(&quot;Analyse&quot;) .ContainsKey(&quot;%Reussite&quot;)]" sap:VirtualizedContainerService.HintSize="1284,1894.66666666667" sap2010:WorkflowViewState.IdRef="If_14">
            <If.Then>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[DT_Recap]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="560,1712.66666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="526,1590" sap2010:WorkflowViewState.IdRef="Sequence_18">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[row(&quot;Status&quot;).ToString =&quot;Successful&quot; AndAlso row(&quot;Analyse.%Reussite&quot;).ToString =&quot;100&quot;]" sap:VirtualizedContainerService.HintSize="484,472.666666666667" sap2010:WorkflowViewState.IdRef="If_13">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,290.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_19">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_37">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[row("Etat")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">["vert"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,97.3333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:Int32">[NbVert]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:Int32">[NbVert+1]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                          </Sequence>
                        </If.Then>
                      </If>
                      <If Condition="[row(&quot;Status&quot;).ToString =&quot;Successful&quot; AndAlso row(&quot;Analyse.%Reussite&quot;).ToString &lt;&gt;&quot;100&quot;]" sap:VirtualizedContainerService.HintSize="484,472.666666666667" sap2010:WorkflowViewState.IdRef="If_15">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,290.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_20">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_38">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[row("Etat")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">["orange"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,97.3333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:Int32">[NbOrange]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:Int32">[NbOrange+1]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                          </Sequence>
                        </If.Then>
                      </If>
                      <If Condition="[row(&quot;Status&quot;).ToString &lt;&gt;&quot;Successful&quot;]" sap:VirtualizedContainerService.HintSize="484,472.666666666667" sap2010:WorkflowViewState.IdRef="If_16">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="376,290.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_21">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="334,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_39">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[row("Etat")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">["rouge"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="334,97.3333333333333" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:Int32">[NbRouge]</OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:Int32">[NbRouge+1]</InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                            </ui:MultipleAssign>
                          </Sequence>
                        </If.Then>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
              </ui:ForEachRow>
            </If.Then>
          </If>
          <Assign sap:VirtualizedContainerService.HintSize="1284,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_40">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_PathExcel]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_FolderRecap+"\"+in_FolderOrchrestrator.Replace("/", " - " )+Now.ToString("yyyy-MM-dd HH-mm-ss ffff")+".xlsx"]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[DT_Recap]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="1284,114.666666666667" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Datas" WorkbookPath="[out_PathExcel]" />
          <Assign sap:VirtualizedContainerService.HintSize="1284,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_41">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[out_DT]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable">[DT_Recap]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="1284,158.666666666667" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_Oranges]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[NbOrange.ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_Rouges]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[NbRouge.ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[out_Verts]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[NbVert.ToString]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1284,93.3333333333333" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Recap : &quot; + out_PathExcel]" />
        </Sequence>
      </If.Then>
    </If>
  </Sequence>
</Activity>